{"version":3,"file":"movies-block/index.js","mappings":"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CAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA,sGAAsG,wFAAwF;UAC9L","sources":["webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/CountControl.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/DirectorControl.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/GenreControl.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/LabelControl.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/LanguageControl.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/components/MovieList.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/edit.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/index.js","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/editor.scss?3e05","webpack://movie-library/./inc/classes/block-editor/blocks/movies-block/style.scss?59e7","webpack://movie-library/external window [\"wp\",\"blockEditor\"]","webpack://movie-library/external window [\"wp\",\"blocks\"]","webpack://movie-library/external window [\"wp\",\"components\"]","webpack://movie-library/external window [\"wp\",\"coreData\"]","webpack://movie-library/external window [\"wp\",\"data\"]","webpack://movie-library/external window [\"wp\",\"element\"]","webpack://movie-library/external window [\"wp\",\"htmlEntities\"]","webpack://movie-library/external window [\"wp\",\"i18n\"]","webpack://movie-library/webpack/bootstrap","webpack://movie-library/webpack/runtime/chunk loaded","webpack://movie-library/webpack/runtime/compat get default export","webpack://movie-library/webpack/runtime/define property getters","webpack://movie-library/webpack/runtime/hasOwnProperty shorthand","webpack://movie-library/webpack/runtime/make namespace object","webpack://movie-library/webpack/runtime/jsonp chunk loading","webpack://movie-library/webpack/before-startup","webpack://movie-library/webpack/startup","webpack://movie-library/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\n\n/**\n * Component for controlling the count of movies to display.\n *\n * This component renders an input field for setting the count of movies to display\n * within a specified range (0 - 10).\n *\n * @param {Object}   props          - The properties passed to the CountControl component.\n * @param {Function} props.setCount - A function to set the count of movies.\n * @param {number}   props.count    - The current count of movies.\n * @return {JSX.Element} JSX element representing the count control.\n */\nexport default function CountControl({ setCount, count }) {\n\tconst [randomID] = useState(Math.floor(Math.random() * 1e5));\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>{__('Select Count', 'movie-library')}</legend>\n\t\t\t<div>\n\t\t\t\t<label htmlFor={`${randomID}_count_input`}>\n\t\t\t\t\t{__('Number of movies (0 - 10)', 'movie-library')}\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tstep={1}\n\t\t\t\t\tvalue={count}\n\t\t\t\t\tid={`${randomID}_count_input`}\n\t\t\t\t\tonChange={(evt) => setCount(evt.target.value)}\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={10}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n}\n","import { ComboboxControl, Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Component for controlling the selection of a movie director.\n *\n * This component renders a ComboboxControl to select a movie director based on\n * available options retrieved from the WordPress database.\n *\n * @param {Object}   props                - The properties passed to the DirectorControl component.\n * @param {Function} props.setDirector    - A function to set the selected movie director.\n * @param {number}   props.directorTermID - The ID of the director term in the database.\n * @param {number}   props.director       - The currently selected director.\n * @return {JSX.Element} JSX element representing the director control.\n */\nexport default function DirectorControl({\n\tsetDirector,\n\tdirectorTermID,\n\tdirector,\n}) {\n\tconst [options, setOptions] = useState([]);\n\tconst [filteredOptions, setFilteredOptions] = useState([]);\n\tconst { directors, haveDirectorsResolved } = useSelect((select) => {\n\t\tconst query = {\n\t\t\t'mlib-person-career': directorTermID,\n\t\t};\n\t\tconst selectorArgs = ['postType', 'mlib-person', query];\n\n\t\treturn {\n\t\t\tdirectors: select(coreDataStore).getEntityRecords(...selectorArgs),\n\t\t\thaveDirectorsResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecords',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t}, []);\n\n\t// Set up directors list if resolved.\n\tuseEffect(() => {\n\t\tif (!haveDirectorsResolved || !directors) {\n\t\t\treturn;\n\t\t}\n\t\tconst directorOptions = directors.map((currDirector) => ({\n\t\t\tlabel: decodeEntities(currDirector.title.rendered),\n\t\t\tvalue: currDirector.id,\n\t\t}));\n\t\tsetOptions([...directorOptions]);\n\t\tsetFilteredOptions([...directorOptions]);\n\t}, [haveDirectorsResolved]);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>{__('Select Director', 'movie-library')}</legend>\n\t\t\t{haveDirectorsResolved && directors ? (\n\t\t\t\t<ComboboxControl\n\t\t\t\t\tlabel={__('Director', 'movie-library')}\n\t\t\t\t\tvalue={director}\n\t\t\t\t\tonChange={setDirector}\n\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\tsetFilteredOptions(\n\t\t\t\t\t\t\toptions.filter((option) =>\n\t\t\t\t\t\t\t\toption.label\n\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</fieldset>\n\t);\n}\n","import { ComboboxControl, Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Component for controlling the selection of a movie genre.\n *\n * This component renders a ComboboxControl to select a movie genre based on\n * available options retrieved from the WordPress database.\n *\n * @param {Object}   props          - The properties passed to the GenreControl component.\n * @param {Function} props.setGenre - A function to set the selected movie genre.\n * @param {number}   props.genre    - The currently selected movie genre.\n * @return {JSX.Element} JSX element representing the genre control.\n */\nexport default function GenreControl({ setGenre, genre }) {\n\tconst [options, setOptions] = useState([]);\n\tconst [filteredOptions, setFilteredOptions] = useState([]);\n\n\tconst { genres, haveGenresResolved } = useSelect((select) => {\n\t\tconst query = {\n\t\t\tper_page: -1,\n\t\t};\n\t\tconst selectorArgs = ['taxonomy', 'mlib-movie-genre', query];\n\n\t\treturn {\n\t\t\tgenres: select(coreDataStore).getEntityRecords(...selectorArgs),\n\t\t\thaveGenresResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecords',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t}, []);\n\n\t// Set up genre options if resolved.\n\tuseEffect(() => {\n\t\tif (!haveGenresResolved || !genres) {\n\t\t\treturn;\n\t\t}\n\t\tconst genreOptions = genres.map((currGenre) => ({\n\t\t\tlabel: decodeEntities(currGenre.name),\n\t\t\tvalue: currGenre.id,\n\t\t}));\n\t\tsetOptions([...genreOptions]);\n\t\tsetFilteredOptions([...genreOptions]);\n\t}, [haveGenresResolved]);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>{__('Select Genre', 'movie-library')}</legend>\n\t\t\t{haveGenresResolved && genres ? (\n\t\t\t\t<ComboboxControl\n\t\t\t\t\tlabel={__('Genre', 'movie-library')}\n\t\t\t\t\tvalue={genre}\n\t\t\t\t\tonChange={setGenre}\n\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\tsetFilteredOptions(\n\t\t\t\t\t\t\toptions.filter((option) =>\n\t\t\t\t\t\t\t\toption.label\n\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</fieldset>\n\t);\n}\n","import { ComboboxControl, Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Component for controlling the selection of a movie label.\n *\n * This component renders a ComboboxControl to select a movie label based on\n * available options retrieved from the WordPress database.\n *\n * @param {Object}   props          - The properties passed to the LabelControl component.\n * @param {Function} props.setLabel - A function to set the selected movie label.\n * @param {number}   props.label    - The currently selected movie label.\n * @return {JSX.Element} JSX element representing the label control.\n */\n\nexport default function LabelControl({ setLabel, label }) {\n\tconst [options, setOptions] = useState([]);\n\tconst [filteredOptions, setFilteredOptions] = useState([]);\n\n\tconst { labels, haveLabelsResolved } = useSelect((select) => {\n\t\tconst query = {\n\t\t\tper_page: -1,\n\t\t};\n\t\tconst selectorArgs = ['taxonomy', 'mlib-movie-label', query];\n\n\t\treturn {\n\t\t\tlabels: select(coreDataStore).getEntityRecords(...selectorArgs),\n\t\t\thaveLabelsResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecords',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t}, []);\n\n\t// Set up the options if query resolved.\n\tuseEffect(() => {\n\t\tif (!haveLabelsResolved || !labels) {\n\t\t\treturn;\n\t\t}\n\t\tconst labelOptions = labels.map((currLabel) => ({\n\t\t\tlabel: decodeEntities(currLabel.name),\n\t\t\tvalue: currLabel.id,\n\t\t}));\n\t\tsetOptions([...labelOptions]);\n\t\tsetFilteredOptions([...labelOptions]);\n\t}, [haveLabelsResolved]);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>{__('Select Label', 'movie-library')}</legend>\n\t\t\t{haveLabelsResolved && labels ? (\n\t\t\t\t<ComboboxControl\n\t\t\t\t\tlabel={__('Label', 'movie-library')}\n\t\t\t\t\tvalue={label}\n\t\t\t\t\tonChange={setLabel}\n\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\tsetFilteredOptions(\n\t\t\t\t\t\t\toptions.filter((option) =>\n\t\t\t\t\t\t\t\toption.label\n\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</fieldset>\n\t);\n}\n","import { ComboboxControl, Spinner } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Component for controlling the selection of a movie language.\n *\n * This component renders a ComboboxControl to select a movie language based on\n * available options retrieved from the WordPress database.\n *\n * @param {Object}   props             - The properties passed to the LanguageControl component.\n * @param {Function} props.setLanguage - A function to set the selected movie language.\n * @param {number}   props.language    - The currently selected movie language.\n * @return {JSX.Element} JSX element representing the language control.\n */\nexport default function LanguageControl({ setLanguage, language }) {\n\tconst [options, setOptions] = useState([]);\n\tconst [filteredOptions, setFilteredOptions] = useState([]);\n\n\tconst { languages, haveLanguagesResolved } = useSelect((select) => {\n\t\tconst query = {\n\t\t\tper_page: -1,\n\t\t};\n\t\tconst selectorArgs = ['taxonomy', 'mlib-movie-language', query];\n\n\t\treturn {\n\t\t\tlanguages: select(coreDataStore).getEntityRecords(...selectorArgs),\n\t\t\thaveLanguagesResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecords',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t}, []);\n\n\t// Set up the languages when resolved.\n\tuseEffect(() => {\n\t\tif (!haveLanguagesResolved || !languages) {\n\t\t\treturn;\n\t\t}\n\t\tconst languageOptions = languages.map((currLanguage) => ({\n\t\t\tlabel: decodeEntities(currLanguage.name),\n\t\t\tvalue: currLanguage.id,\n\t\t}));\n\t\tsetOptions([...languageOptions]);\n\t\tsetFilteredOptions([...languageOptions]);\n\t}, [haveLanguagesResolved]);\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<legend>{__('Select Language', 'movie-library')}</legend>\n\t\t\t{haveLanguagesResolved && languages ? (\n\t\t\t\t<ComboboxControl\n\t\t\t\t\tlabel={__('Language', 'movie-library')}\n\t\t\t\t\tvalue={language}\n\t\t\t\t\tonChange={setLanguage}\n\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\tsetFilteredOptions(\n\t\t\t\t\t\t\toptions.filter((option) =>\n\t\t\t\t\t\t\t\toption.label\n\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</fieldset>\n\t);\n}\n","import { useEffect, useState } from '@wordpress/element';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Component for displaying a list of movies.\n *\n * This component renders a list of movies based on queried posts and filters\n * them by director if specified.\n *\n * @param {Object} props              - The properties passed to the MoviesList component.\n * @param {Array}  props.queriedPosts - An array of queried movie posts.\n * @param {number} props.director     - The director ID for filtering movies.\n * @return {JSX.Element} JSX element representing the movies list.\n */\nexport default function MoviesList({ queriedPosts, director }) {\n\tconst [posts, setPosts] = useState(queriedPosts);\n\n\t// Filter the movies by director.\n\tuseEffect(() => {\n\t\tif (director !== 0) {\n\t\t\tsetPosts(\n\t\t\t\tqueriedPosts.filter((item) => {\n\t\t\t\t\tlet postDirectors = [];\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpostDirectors = JSON.parse(\n\t\t\t\t\t\t\titem.meta['mlib-movie-meta-crew-director']\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tArray.isArray(postDirectors) &&\n\t\t\t\t\t\tpostDirectors.includes(director)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tsetPosts(queriedPosts);\n\t\t}\n\t}, [queriedPosts, director]);\n\n\treturn posts.length > 0 ? (\n\t\t<ul className=\"movie-library-movies-list\">\n\t\t\t{posts.map((item) => (\n\t\t\t\t<li key={item.id}>\n\t\t\t\t\t<MovieListItem\n\t\t\t\t\t\ttitle={decodeEntities(item.title.rendered)}\n\t\t\t\t\t\tthumbnail={\n\t\t\t\t\t\t\titem._embedded['wp:featuredmedia']\n\t\t\t\t\t\t\t\t? item._embedded['wp:featuredmedia'][0]\n\t\t\t\t\t\t\t\t\t\t.source_url\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t\treleaseDate={\n\t\t\t\t\t\t\titem.meta['mlib-movie-meta-basic-release-date']\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirector={director}\n\t\t\t\t\t\tactors={item.meta['mlib-movie-meta-crew-actor']}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t) : (\n\t\t<p>{__('No movies found', 'movie-library')}</p>\n\t);\n}\n\n/**\n * Component for displaying a single movie item.\n *\n * This component displays details of a single movie item, including its title,\n * thumbnail, release date, director, and actors.\n *\n * @param {Object} props             - The properties passed to the MovieListItem component.\n * @param {string} props.title       - The title of the movie.\n * @param {string} props.thumbnail   - The URL of the movie's thumbnail image.\n * @param {string} props.releaseDate - The release date of the movie.\n * @param {number} props.director    - The director ID of the movie.\n * @param {Array}  props.actors      - An array of actor IDs in the movie.\n * @return {JSX.Element} JSX element representing a movie item.\n */\nfunction MovieListItem({ title, thumbnail, releaseDate, director, actors }) {\n\tconst [directorName, setDirectorName] = useState('');\n\tconst [actorNames, setActorNames] = useState([]);\n\n\t// Select the information about the selected director.\n\tconst { directorRecord, hasDirectorResolved } = useSelect((select) => {\n\t\tconst selectorArgs = ['postType', 'mlib-person', director];\n\t\tif (director === 0) {\n\t\t\treturn {\n\t\t\t\tdirectorRecord: { title: { rendered: '' } },\n\t\t\t\thasDirectorResolved: true,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdirectorRecord: select(coreDataStore).getEntityRecord(\n\t\t\t\t...selectorArgs\n\t\t\t),\n\t\t\thasDirectorResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecord',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t});\n\n\t// Select the information about the actors for the movie.\n\tconst { actorRecords, haveActorsResolved } = useSelect((select) => {\n\t\tlet actorIDs = [];\n\n\t\ttry {\n\t\t\tactorIDs = JSON.parse(actors);\n\t\t} catch (error) {}\n\n\t\tif (!Array.isArray(actorIDs)) {\n\t\t\treturn {\n\t\t\t\tactorRecords: [],\n\t\t\t\thaveActorsResolved: true,\n\t\t\t};\n\t\t}\n\n\t\tconst include = actorIDs.slice(0, 2);\n\n\t\tconst selectorArgs = ['postType', 'mlib-person', { include }];\n\t\treturn {\n\t\t\tactorRecords: select(coreDataStore).getEntityRecords(\n\t\t\t\t...selectorArgs\n\t\t\t),\n\t\t\thaveActorsResolved: select(coreDataStore).hasFinishedResolution(\n\t\t\t\t'getEntityRecords',\n\t\t\t\tselectorArgs\n\t\t\t),\n\t\t};\n\t});\n\n\t// Set director name if resolved.\n\tuseEffect(() => {\n\t\tif (!hasDirectorResolved) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDirectorName(decodeEntities(directorRecord.title.rendered));\n\t}, [hasDirectorResolved]);\n\n\t// Set actor names if resolved.\n\tuseEffect(() => {\n\t\tif (!haveActorsResolved) {\n\t\t\treturn;\n\t\t}\n\t\tsetActorNames(\n\t\t\tactorRecords.map((actor) => decodeEntities(actor.title.rendered))\n\t\t);\n\t}, [haveActorsResolved]);\n\n\treturn (\n\t\t<>\n\t\t\t<img src={thumbnail} alt={title} />\n\t\t\t<p>{`${__('Title', 'movie-library')}: ${title}`}</p>\n\t\t\t<p>{`${__('Release Date', 'movie-library')}: ${releaseDate}`}</p>\n\t\t\t<p>{`${__('Director', 'movie-library')}: ${directorName}`}</p>\n\t\t\t<p>{`${__('Actors', 'movie-library')}: ${actorNames.join(\n\t\t\t\t', '\n\t\t\t)}`}</p>\n\t\t</>\n\t);\n}\n","import { useBlockProps, InspectorControls } from '@wordpress/block-editor';\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport CountControl from './components/CountControl';\nimport DirectorControl from './components/DirectorControl';\nimport GenreControl from './components/GenreControl';\nimport LabelControl from './components/LabelControl';\nimport LanguageControl from './components/LanguageControl';\nimport { Spinner } from '@wordpress/components';\nimport MoviesList from './components/MovieList';\n\n/**\n * WordPress Edit component for a movie-related block.\n *\n * This component is responsible for rendering the block in the block editor and\n * handling user interactions in the editing mode.\n *\n * @param {Object}   props               - The properties passed to the Edit component.\n * @param {Object}   props.attributes    - The block attributes.\n * @param {Function} props.setAttributes - A function to set block attributes.\n *\n * @return {JSX.Element} JSX element representing the block in the editor.\n */\nexport function Edit({ attributes, setAttributes }) {\n\t/**\n\t * Sets the director attribute of the block.\n\t *\n\t * @param {number} val\n\t */\n\tconst setDirector = (val) => setAttributes({ director: val ?? 0 });\n\n\t/**\n\t * Sets the genre attribute of the block.\n\t *\n\t * @param {number} val\n\t */\n\tconst setGenre = (val) => setAttributes({ genre: val ?? 0 });\n\n\t/**\n\t * Sets the label attribute of the block.\n\t *\n\t * @param {number} val\n\t */\n\tconst setLabel = (val) => setAttributes({ label: val ?? 0 });\n\n\t/**\n\t * Sets the language attribute of the block.\n\t *\n\t * @param {number} val\n\t */\n\tconst setLanguage = (val) => setAttributes({ language: val ?? 0 });\n\n\t/**\n\t * Sets the count attribute of the block.\n\t *\n\t * Converts count into an integer if possible.\n\t *\n\t * @param {number|string} val\n\t */\n\tconst setCount = (val) => {\n\t\tif (!val || (typeof val !== 'number' && typeof val !== 'string')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst intCount = Number.parseInt(val);\n\n\t\tif (Number.isInteger(intCount) && intCount > 0 && intCount <= 10) {\n\t\t\tsetAttributes({ count: intCount });\n\t\t}\n\t};\n\n\tconst { director, genre, label, language, count } = attributes;\n\n\t// Select the term id for 'director'.\n\tconst { directorTerm, hasDirectorTermResolved } = useSelect((select) => {\n\t\tconst query = { slug: 'director' };\n\t\tconst selectorArgs = ['taxonomy', 'mlib-person-career', query];\n\n\t\treturn {\n\t\t\tdirectorTerm: select(coreDataStore).getEntityRecords(\n\t\t\t\t...selectorArgs\n\t\t\t),\n\t\t\thasDirectorTermResolved: select(\n\t\t\t\tcoreDataStore\n\t\t\t).hasFinishedResolution('getEntityRecords', selectorArgs),\n\t\t};\n\t}, []);\n\n\t// Query the posts each time the user selects a filter.\n\tconst { queriedPosts, haveQueriedPostsResolved } = useSelect(\n\t\t(select) => {\n\t\t\t// Set base query params\n\t\t\tconst query = { per_page: 5, _embed: true };\n\n\t\t\t// Set posts per page.\n\t\t\tif (\n\t\t\t\tcount &&\n\t\t\t\t(typeof count === 'number' || typeof count === 'string')\n\t\t\t) {\n\t\t\t\tconst intCount = Number.parseInt(count);\n\n\t\t\t\tif (\n\t\t\t\t\tNumber.isInteger(intCount) &&\n\t\t\t\t\tintCount > 0 &&\n\t\t\t\t\tintCount <= 10\n\t\t\t\t) {\n\t\t\t\t\tquery.per_page = intCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set movie genre taxonomy query.\n\t\t\tif (\n\t\t\t\tgenre &&\n\t\t\t\ttypeof genre === 'number' &&\n\t\t\t\tNumber.isInteger(genre) &&\n\t\t\t\tgenre > 0\n\t\t\t) {\n\t\t\t\tquery['mlib-movie-genre'] = genre;\n\t\t\t}\n\n\t\t\t// Set movie label taxonomy query.\n\t\t\tif (\n\t\t\t\tlabel &&\n\t\t\t\ttypeof label === 'number' &&\n\t\t\t\tNumber.isInteger(label) &&\n\t\t\t\tlabel > 0\n\t\t\t) {\n\t\t\t\tquery['mlib-movie-label'] = label;\n\t\t\t}\n\n\t\t\t// Set language taxonomy query\n\t\t\tif (\n\t\t\t\tlanguage &&\n\t\t\t\ttypeof language === 'number' &&\n\t\t\t\tNumber.isInteger(language) &&\n\t\t\t\tlanguage > 0\n\t\t\t) {\n\t\t\t\tquery['mlib-movie-language'] = language;\n\t\t\t}\n\n\t\t\tconst selectorArgs = ['postType', 'mlib-movie', query];\n\n\t\t\treturn {\n\t\t\t\tqueriedPosts: select(coreDataStore).getEntityRecords(\n\t\t\t\t\t...selectorArgs\n\t\t\t\t),\n\t\t\t\thaveQueriedPostsResolved: select(\n\t\t\t\t\tcoreDataStore\n\t\t\t\t).hasFinishedResolution('getEntityRecords', selectorArgs),\n\t\t\t};\n\t\t},\n\t\t[genre, label, language, count]\n\t);\n\n\treturn (\n\t\t<div {...useBlockProps()}>\n\t\t\t<InspectorControls key=\"movies-block-controls\">\n\t\t\t\t<div id=\"movies-block-controls\">\n\t\t\t\t\t<CountControl count={count} setCount={setCount} />\n\t\t\t\t\t{hasDirectorTermResolved && directorTerm && (\n\t\t\t\t\t\t<DirectorControl\n\t\t\t\t\t\t\tdirectorTermID={directorTerm[0].id}\n\t\t\t\t\t\t\tsetDirector={setDirector}\n\t\t\t\t\t\t\tdirector={director}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<GenreControl setGenre={setGenre} genre={genre} />\n\t\t\t\t\t<LabelControl setLabel={setLabel} label={label} />\n\t\t\t\t\t<LanguageControl\n\t\t\t\t\t\tsetLanguage={setLanguage}\n\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</InspectorControls>\n\t\t\t{haveQueriedPostsResolved ? (\n\t\t\t\t<MoviesList queriedPosts={queriedPosts} director={director} />\n\t\t\t) : (\n\t\t\t\t<Spinner />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport metadata from './block.json';\n\nimport './editor.scss';\nimport './style.scss';\nimport { Edit } from './edit';\n\nregisterBlockType(metadata.name, {\n\tedit: Edit,\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"movies-block/index\": 0,\n\t\"movies-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmovie_library\"] = self[\"webpackChunkmovie_library\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"movies-block/style-index\"], function() { return __webpack_require__(\"./inc/classes/block-editor/blocks/movies-block/index.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useState","CountControl","setCount","count","randomID","Math","floor","random","createElement","htmlFor","type","step","value","id","onChange","evt","target","min","max","ComboboxControl","Spinner","useEffect","store","coreDataStore","useSelect","decodeEntities","DirectorControl","setDirector","directorTermID","director","options","setOptions","filteredOptions","setFilteredOptions","directors","haveDirectorsResolved","select","query","selectorArgs","getEntityRecords","hasFinishedResolution","directorOptions","map","currDirector","label","title","rendered","onFilterValueChange","inputValue","filter","option","toLowerCase","startsWith","GenreControl","setGenre","genre","genres","haveGenresResolved","per_page","genreOptions","currGenre","name","LabelControl","setLabel","labels","haveLabelsResolved","labelOptions","currLabel","LanguageControl","setLanguage","language","languages","haveLanguagesResolved","languageOptions","currLanguage","MoviesList","queriedPosts","posts","setPosts","item","postDirectors","JSON","parse","meta","error","Array","isArray","includes","length","className","key","MovieListItem","thumbnail","_embedded","source_url","releaseDate","actors","directorName","setDirectorName","actorNames","setActorNames","directorRecord","hasDirectorResolved","getEntityRecord","actorRecords","haveActorsResolved","actorIDs","include","slice","actor","Fragment","src","alt","join","useBlockProps","InspectorControls","Edit","attributes","setAttributes","val","intCount","Number","parseInt","isInteger","directorTerm","hasDirectorTermResolved","slug","haveQueriedPostsResolved","_embed","registerBlockType","metadata","edit"],"sourceRoot":""}